name: CI - Booknest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-checks:
    name: Frontend Lint & Build
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: ./frontend } }

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - run: npm ci
      - run: npm run lint-staged
      - run: npm run build

  backend-unit-tests:
    name: Backend Unit Tests
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: ./backend } }

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - run: chmod +x mvnw

      - run: ./mvnw spring-javaformat:apply

      - run: ./mvnw spring-javaformat:validate

      - run: ./mvnw test -DskipITs -Dspring.profiles.active=test

  backend-integration-tests:
    name: Backend Integration Tests
    needs: backend-unit-tests
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: ./backend } }

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven    

      - run: chmod +x mvnw

      - run: ./mvnw verify -DskipUTs -Dspring.profiles.active=test

  docker-backend:
    name: Dockerize Backend
    needs: [ backend-integration-tests ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - run: docker build -t booknest-backend:latest ./backend
